"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BasePublishingAgent = void 0;
class BasePublishingAgent {
    validateRequiredCredentials(credentials, requiredFields) {
        for (const field of requiredFields) {
            if (!credentials[field]) {
                throw new Error(`Missing required credential: ${field}`);
            }
        }
    }
    sanitizeContent(content) {
        // Remove potentially harmful content and normalize formatting
        return content
            .replace(/<script[^>]*>.*?<\/script>/gi, '')
            .replace(/<iframe[^>]*>.*?<\/iframe>/gi, '')
            .trim();
    }
    extractTags(content) {
        // Extract hashtags from content
        const tagRegex = /#(\w+)/g;
        const tags = [];
        let match;
        while ((match = tagRegex.exec(content)) !== null) {
            tags.push(match[1]);
        }
        return [...new Set(tags)]; // Remove duplicates
    }
    formatImageForPlatform(imageUrl, platformRequirements) {
        // In a real implementation, this would handle image resizing and format conversion
        // For now, return the original URL
        return imageUrl;
    }
}
exports.BasePublishingAgent = BasePublishingAgent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1wdWJsaXNoaW5nLWFnZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYmFzZS1wdWJsaXNoaW5nLWFnZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQWtDQSxNQUFzQixtQkFBbUI7SUFTN0IsMkJBQTJCLENBQUMsV0FBZ0MsRUFBRSxjQUF3QjtRQUM5RixLQUFLLE1BQU0sS0FBSyxJQUFJLGNBQWMsRUFBRTtZQUNsQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxFQUFFO2dCQUN2QixNQUFNLElBQUksS0FBSyxDQUFDLGdDQUFnQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO2FBQzFEO1NBQ0Y7SUFDSCxDQUFDO0lBRVMsZUFBZSxDQUFDLE9BQWU7UUFDdkMsOERBQThEO1FBQzlELE9BQU8sT0FBTzthQUNYLE9BQU8sQ0FBQyw4QkFBOEIsRUFBRSxFQUFFLENBQUM7YUFDM0MsT0FBTyxDQUFDLDhCQUE4QixFQUFFLEVBQUUsQ0FBQzthQUMzQyxJQUFJLEVBQUUsQ0FBQztJQUNaLENBQUM7SUFFUyxXQUFXLENBQUMsT0FBZTtRQUNuQyxnQ0FBZ0M7UUFDaEMsTUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDO1FBQzNCLE1BQU0sSUFBSSxHQUFhLEVBQUUsQ0FBQztRQUMxQixJQUFJLEtBQUssQ0FBQztRQUVWLE9BQU8sQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLElBQUksRUFBRTtZQUNoRCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3JCO1FBRUQsT0FBTyxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLG9CQUFvQjtJQUNqRCxDQUFDO0lBRVMsc0JBQXNCLENBQUMsUUFBZ0IsRUFBRSxvQkFBZ0Y7UUFDakksbUZBQW1GO1FBQ25GLG1DQUFtQztRQUNuQyxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0Y7QUEzQ0Qsa0RBMkNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmxvZ0NvbnRlbnQgfSBmcm9tICcuLi8uLi8uLi9mcm9udGVuZC9zcmMvdHlwZXMvQmxvZ0NvbnRlbnQnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBQdWJsaXNoaW5nQ29uZmlnIHtcclxuICBwbGF0Zm9ybTogc3RyaW5nO1xyXG4gIGNyZWRlbnRpYWxzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xyXG4gIGZvcm1hdE9wdGlvbnM/OiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFB1Ymxpc2hSZXN1bHQge1xyXG4gIHN1Y2Nlc3M6IGJvb2xlYW47XHJcbiAgcGxhdGZvcm1Vcmw/OiBzdHJpbmc7XHJcbiAgcGxhdGZvcm1JZD86IHN0cmluZztcclxuICBlcnJvcj86IHN0cmluZztcclxuICBtZXRhZGF0YT86IFJlY29yZDxzdHJpbmcsIGFueT47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRm9ybWF0dGVkQ29udGVudCB7XHJcbiAgdGl0bGU6IHN0cmluZztcclxuICBib2R5OiBzdHJpbmc7XHJcbiAgdGFncz86IHN0cmluZ1tdO1xyXG4gIGltYWdlVXJsPzogc3RyaW5nO1xyXG4gIG1ldGFkYXRhPzogUmVjb3JkPHN0cmluZywgYW55PjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBQdWJsaXNoaW5nQWdlbnQge1xyXG4gIHJlYWRvbmx5IHBsYXRmb3JtTmFtZTogc3RyaW5nO1xyXG4gIHJlYWRvbmx5IHN1cHBvcnRlZEZlYXR1cmVzOiBzdHJpbmdbXTtcclxuICBcclxuICB2YWxpZGF0ZUNyZWRlbnRpYWxzKGNyZWRlbnRpYWxzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+KTogUHJvbWlzZTxib29sZWFuPjtcclxuICBmb3JtYXRDb250ZW50KGNvbnRlbnQ6IEJsb2dDb250ZW50LCBpbWFnZVVybD86IHN0cmluZyk6IFByb21pc2U8Rm9ybWF0dGVkQ29udGVudD47XHJcbiAgcHVibGlzaChmb3JtYXR0ZWRDb250ZW50OiBGb3JtYXR0ZWRDb250ZW50LCBjb25maWc6IFB1Ymxpc2hpbmdDb25maWcpOiBQcm9taXNlPFB1Ymxpc2hSZXN1bHQ+O1xyXG4gIGdldFB1Ymxpc2hpbmdTdGF0dXMocGxhdGZvcm1JZDogc3RyaW5nLCBjb25maWc6IFB1Ymxpc2hpbmdDb25maWcpOiBQcm9taXNlPCdwdWJsaXNoZWQnIHwgJ2RyYWZ0JyB8ICdmYWlsZWQnIHwgJ3Vua25vd24nPjtcclxufVxyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEJhc2VQdWJsaXNoaW5nQWdlbnQgaW1wbGVtZW50cyBQdWJsaXNoaW5nQWdlbnQge1xyXG4gIGFic3RyYWN0IHJlYWRvbmx5IHBsYXRmb3JtTmFtZTogc3RyaW5nO1xyXG4gIGFic3RyYWN0IHJlYWRvbmx5IHN1cHBvcnRlZEZlYXR1cmVzOiBzdHJpbmdbXTtcclxuXHJcbiAgYWJzdHJhY3QgdmFsaWRhdGVDcmVkZW50aWFscyhjcmVkZW50aWFsczogUmVjb3JkPHN0cmluZywgYW55Pik6IFByb21pc2U8Ym9vbGVhbj47XHJcbiAgYWJzdHJhY3QgZm9ybWF0Q29udGVudChjb250ZW50OiBCbG9nQ29udGVudCwgaW1hZ2VVcmw/OiBzdHJpbmcpOiBQcm9taXNlPEZvcm1hdHRlZENvbnRlbnQ+O1xyXG4gIGFic3RyYWN0IHB1Ymxpc2goZm9ybWF0dGVkQ29udGVudDogRm9ybWF0dGVkQ29udGVudCwgY29uZmlnOiBQdWJsaXNoaW5nQ29uZmlnKTogUHJvbWlzZTxQdWJsaXNoUmVzdWx0PjtcclxuICBhYnN0cmFjdCBnZXRQdWJsaXNoaW5nU3RhdHVzKHBsYXRmb3JtSWQ6IHN0cmluZywgY29uZmlnOiBQdWJsaXNoaW5nQ29uZmlnKTogUHJvbWlzZTwncHVibGlzaGVkJyB8ICdkcmFmdCcgfCAnZmFpbGVkJyB8ICd1bmtub3duJz47XHJcblxyXG4gIHByb3RlY3RlZCB2YWxpZGF0ZVJlcXVpcmVkQ3JlZGVudGlhbHMoY3JlZGVudGlhbHM6IFJlY29yZDxzdHJpbmcsIGFueT4sIHJlcXVpcmVkRmllbGRzOiBzdHJpbmdbXSk6IHZvaWQge1xyXG4gICAgZm9yIChjb25zdCBmaWVsZCBvZiByZXF1aXJlZEZpZWxkcykge1xyXG4gICAgICBpZiAoIWNyZWRlbnRpYWxzW2ZpZWxkXSkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgTWlzc2luZyByZXF1aXJlZCBjcmVkZW50aWFsOiAke2ZpZWxkfWApO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgc2FuaXRpemVDb250ZW50KGNvbnRlbnQ6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAvLyBSZW1vdmUgcG90ZW50aWFsbHkgaGFybWZ1bCBjb250ZW50IGFuZCBub3JtYWxpemUgZm9ybWF0dGluZ1xyXG4gICAgcmV0dXJuIGNvbnRlbnRcclxuICAgICAgLnJlcGxhY2UoLzxzY3JpcHRbXj5dKj4uKj88XFwvc2NyaXB0Pi9naSwgJycpXHJcbiAgICAgIC5yZXBsYWNlKC88aWZyYW1lW14+XSo+Lio/PFxcL2lmcmFtZT4vZ2ksICcnKVxyXG4gICAgICAudHJpbSgpO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGV4dHJhY3RUYWdzKGNvbnRlbnQ6IHN0cmluZyk6IHN0cmluZ1tdIHtcclxuICAgIC8vIEV4dHJhY3QgaGFzaHRhZ3MgZnJvbSBjb250ZW50XHJcbiAgICBjb25zdCB0YWdSZWdleCA9IC8jKFxcdyspL2c7XHJcbiAgICBjb25zdCB0YWdzOiBzdHJpbmdbXSA9IFtdO1xyXG4gICAgbGV0IG1hdGNoO1xyXG4gICAgXHJcbiAgICB3aGlsZSAoKG1hdGNoID0gdGFnUmVnZXguZXhlYyhjb250ZW50KSkgIT09IG51bGwpIHtcclxuICAgICAgdGFncy5wdXNoKG1hdGNoWzFdKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcmV0dXJuIFsuLi5uZXcgU2V0KHRhZ3MpXTsgLy8gUmVtb3ZlIGR1cGxpY2F0ZXNcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBmb3JtYXRJbWFnZUZvclBsYXRmb3JtKGltYWdlVXJsOiBzdHJpbmcsIHBsYXRmb3JtUmVxdWlyZW1lbnRzOiB7IG1heFdpZHRoPzogbnVtYmVyOyBtYXhIZWlnaHQ/OiBudW1iZXI7IGZvcm1hdD86IHN0cmluZyB9KTogc3RyaW5nIHtcclxuICAgIC8vIEluIGEgcmVhbCBpbXBsZW1lbnRhdGlvbiwgdGhpcyB3b3VsZCBoYW5kbGUgaW1hZ2UgcmVzaXppbmcgYW5kIGZvcm1hdCBjb252ZXJzaW9uXHJcbiAgICAvLyBGb3Igbm93LCByZXR1cm4gdGhlIG9yaWdpbmFsIFVSTFxyXG4gICAgcmV0dXJuIGltYWdlVXJsO1xyXG4gIH1cclxufSJdfQ==